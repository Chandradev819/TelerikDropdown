@page "/"

<TelerikStepper @bind-Value="@CurrentStepIndex">
    <StepperSteps>
        <StepperStep Template="@CreatePopupWindow()" />
        <StepperStep Template="@CreateTemplate(Happy, "Happy")" />
        <StepperStep Template="@CreateTemplate(Angry, "Angry")" />
        <StepperStep Template="@CreateTemplate(Cool, "Cool")" />
        <StepperStep Template="@CreateTemplate(Love, "Love")" />
        <StepperStep Template="@CreateTemplate(Fear, "Fear")" />

    </StepperSteps>
</TelerikStepper>

@if (IsContainerVisible)
{
    <div class="container">
        <p>This is a div container!</p>
        <button @onclick="HandleOkClick">OK</button>
        <button @onclick="HandleCancelClick">Cancel</button>
    </div>
}

@code {

    public int CurrentStepIndex { get; set; } = 4;
    RenderFragment CreateTemplate(string emoji, string label)
    {
        return
    @<text>
        <div class="custom-step">
            <span style="font-size:20px">@emoji</span>
        </div>
        <span class="step-label">@label</span>
    </text>;
    }

    RenderFragment CreatePopupWindow()
    {
        return
    @<text>
        <div style="border:1px; background-color:green;">
            <button @onclick="ShowContainer">Complaince Review</button>
        </div>
    </text>;
    }
    string Happy = char.ConvertFromUtf32(0x1F600);
    string Angry = char.ConvertFromUtf32(0x1F620);
    string Cool = char.ConvertFromUtf32(0x1F60E);
    string Love = char.ConvertFromUtf32(0x1F60D);
    string Fear = char.ConvertFromUtf32(0x1F628);


    private bool IsContainerVisible = false;

    private void ShowContainer()
    {
        IsContainerVisible = true;
    }

    private void HandleOkClick()
    {
        // Handle the "OK" button click here
        IsContainerVisible = false;
    }

    private void HandleCancelClick()
    {
        // Handle the "Cancel" button click here
        IsContainerVisible = false;
    }


}

<style>
    /* CSS styles for the container */
    .container {
        border: 1px solid #ccc;
        background-color: #fff;
        padding: 10px;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        margin-top: 5px;
        width: 200px;
        float:left;
    }
</style>

<style>
    .custom-stepper .k-progressbar {
        height: 4px;
        top: 18px;
    }

        .custom-stepper .k-progressbar .k-selected {
            background: linear-gradient(to right, #ffc837, #ff8008);
        }

    .custom-step {
        width: 40px;
        height: 40px;
        border: 2px solid #ff8008;
        border-radius: 10px;
        background-clip: padding-box;
        border-radius: 10px;
        box-sizing: border-box;
        text-align: center;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background-color: #fff;
    }

    .k-step-done .custom-step {
        background-image: radial-gradient(circle at center, #ffC837 10px, #ff8008);
    }

    .k-step:not(.k-step-done):not(.k-step-current) .custom-step {
        border: 2px solid #ccc;
    }

    .k-step-link .k-icon {
        font-size: 24px;
        color: #000;
    }

    .k-step-link .step-label {
        color: #75240d;
        font-weight: bold;
    }
</style>